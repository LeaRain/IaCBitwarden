heat_template_version: 2013-05-23

description: >
  HOT template to create a new neutron network plus a router to the public
  network, and for deploying two servers into the new network. The template also
  assigns floating IP addresses to each server so they are routable from the
  public network.

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  image:
    type: string
    description: Name of image to use for servers
  flavor:
    type: string
    description: Flavor to use for servers
  public_net:
    type: string
    description: >
      ID or name of public network for which floating IP addresses will be allocated
  private_net_name:
    type: string
    description: Name of private network to be created
  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
  private_net_gateway:
    type: string
    description: Private network gateway address
  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool
  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool
  volume_size:
    type: number
    description: Size of the volume for the bitwarden server in GB

resources:
  private_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name }

  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      allocation_pools:
        - start: { get_param: private_net_pool_start }
          end: { get_param: private_net_pool_end }

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: private_subnet }

  bitwarden_server:
    type: OS::Nova::Server
    properties:
      name: Server
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: bitwarden_server_port }

  bitwarden_server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }
      security_groups:
        - { get_resource: security_group_ssh }
        - { get_resource: security_group_http }
        - { get_resource: security_group_https }

  security_group_ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      name: ssh_group
      rules:
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
          remote_ip_prefix: 0.0.0.0/0


  security_group_http:
    type: OS::Neutron::SecurityGroup
    properties:
      name: http_group
      rules:
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
          remote_ip_prefix: 0.0.0.0/0

  security_group_https:
    type: OS::Neutron::SecurityGroup
    properties:
      name: https_group
      rules:
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443
          remote_ip_prefix: 0.0.0.0/0


  security_group_postgres:
    type: OS::Neutron::SecurityGroup
    properties:
      name: postgres_group
      rules:
        - protocol: tcp
          port_range_min: 5432
          port_range_max: 5432
          remote_ip_prefix: 0.0.0.0/0

  server_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: bitwarden_server_port }

  bitwarden_server_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: bitwarden_server_volume }
      instance_uuid: { get_resource: bitwarden_server }


outputs:
  server_private_ip:
    description: IP address of server in private network
    value: { get_attr: [ bitwarden_server, first_address ] }
  server_public_ip:
    description: Floating IP address of server in public network
    value: { get_attr: [ server_floating_ip, floating_ip_address ] }

